library(shiny); runApp('Documents/Kanyama - Data Exploration/Kanyama Data Exploration/Shiny/teste-modulos.R')
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = "/Users/gather3/Documents/Kanyama - Data Exploration/Data")
library(readxl)
library(dplyr)
library(ggplot2)
library(leaflet)
library(plotly)
Kanyama.raw <- read_xlsx("KANYAMA.xlsx", sheet = 2, skip = 1)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = "/Users/gather3/Documents/Kanyama - Data Exploration/Kanyama Data Exploration/data")
library(readxl)
library(dplyr)
library(ggplot2)
library(leaflet)
library(plotly)
Kanyama.raw <- read_xlsx("KANYAMA.xlsx", sheet = 2, skip = 1)
Kanyama <- Kanyama.raw %>% select(-c(1:23, 27)) %>% filter(.$`Are you willing to participate?` == "Yes")
str(Kanyama.raw)
Kanyama <- Kanyama %>% rename("Record_plot_number" = `1.3`,
"Families_on_the_plot" = `1.4`,
"People_on_the_plot" = `1.5`,
"VIP toilets" = `1.6 - 1 - 1.5.1`,
"ECOSAN toilets" = `1.6 - 2 - 1.5.1`,
"Inside waterflush toilets" = `1.6 - 3 - 1.5.1`,
"Outside waterflush toilets" = `1.6 - 4 - 1.5.1`,
"Poor flush Inside" = `1.6 - 5 - 1.5.1`,
"Poor flush Outside" = `1.6 - 6 - 1.5.1`,
"Lined Pit latrine" = `1.6 - 7 - 1.5.1`,
"Unlined Pit latrine" = `1.6 - 8 - 1.5.1`,
"Disused/Buried" = `1.6 - 9 - 1.5.1`,
"Water source (fetch)" = `1.6.2`,
"Emptied the toilet before?" = `3.7`,
"Last time emptied" = `3.7.1`,
"Who emptied?" = `3.7.2`,
"Interface Layout" = `4.3 INTERFACE`,
"Width" = `4.4`,
"Diameter" = `4.416`,
"Length" = `4.5`,
"Height" = `4.6`,
"Perception of the fill level" = `4.7`,
"Is emptying feasible?" = `4.8`,
"Is washing hand basin present?" = `4.9`,
"Region" = `1.2`,
"Landlord live in the plot?" = `1.8`,
"Upgraded toilet recently?" = `3.4`
)
simplify <- function(df){
df.reduced <- df %>%
select(-starts_with("DESCRIPTION OF RESPONDENT:"),
-starts_with("SELECT ZONE (Other"),
-starts_with("SELECT ZONE SECTION (Other"),
-`RECORD TYPE OF PROPERTY (Other (please specify)) - specify`,
- `1.3 (Don't Know)`,
- `1.5 (Don't Know)`,
-`1.6.1 Do you think there is space on this plot to construct another toilet?: No - If Yes how many more? If No, why is that the case?`,
-`1.6.2 (Other (please specify)) - specify`,
-`1.7`,
-`1.7.1`,
-`2.1D`,
-`What is the designation of the respondent?`,
-`3.4 (Don't Know)`,
-starts_with("3.5"),
-starts_with("What do you want to upgrade your toilet"),
-starts_with("What happens when the toilet gets full? (Other"),
-ends_with("Months - Age"),
-`3.7 (Other (please specify)) - specify`,
-starts_with("3.7.1 ("),
-starts_with("How did you know about the service of emptying your toilet"),
-starts_with("How would you rate your level of satisfaction with the service you received from the emptiers?" ),
-starts_with("3.7.3"),
-starts_with("Was the fee you paid affordable? (" ),
-starts_with("How often do you empty your toilet? ("),
-starts_with("3.8"),
-starts_with("4.1"),
-starts_with("4.2"),
-starts_with("4.3 SLAB"),
-starts_with("4.3 INTERFACE ("),
-starts_with("CONTAINMENT/SUBSTRUCTURE ("),
-starts_with("Record the observed shape of the substructure/containment  ("),
-starts_with("TAKE PHOTO OF"),
-starts_with("TAKE  PHOTO OF"),
-starts_with("4.8 (Don't Know)")
)
if(any(df.reduced$`Is there another toilet to observe` == "No")){
index <- grep("Is there another", colnames(df.reduced)) + 1
df.reduced <- select(df.reduced, -c(index:ncol(df.reduced)))
}
return(df.reduced)
}
Kanyama.reduced <- simplify(Kanyama)
summary(Kanyama.reduced)
grouping.columns <- function(df, column1, column2, name){
res <- select(df, -starts_with(name))
mutate(res, !!name := case_when(
column1 == T ~ T,
column1 != T & column2 == T ~ F,
TRUE ~ NA))
}
Kanyama.reduced <- grouping.columns(Kanyama.reduced,
Kanyama.reduced$`Is the toilet easily accessible to the following people?: Children - Yes`,
Kanyama.reduced$`Is the toilet easily accessible to the following people?: Children - No`,
"Is the toilet easily accessible to the following people?: Children")
shiny::runApp('Documents/Sanitation-Hub')
runApp('Documents/Sanitation-Hub')
runApp('Documents/Sanitation-Hub')
runApp('Documents/Sanitation-Hub')
runApp('Documents/Sanitation-Hub')
runApp('Documents/Sanitation-Hub')
install.packages(shinyalert)
install.packages(sweetalertR)
runApp('Documents/Sanitation-Hub')
loadFromDB <- function(drv = "PostgreSQL", dbname = 'teste123', host = 'localhost', login = 'gather3', pwd = 'Toilet2019',
database = 'sanitation'){
con <- dbConnect(drv, dbname = dbname,
host = host, port = 5432,
user = login, password = pwd)
file <-dbGetQuery(con, paste('Select * from', database), stringsAsFactors = FALSE)
str(file)
dbDisconnect(con)
return(file)
}
x <- loadFromDB()
str(x)
runApp('Documents/Sanitation-Hub')
library(pool)
install.packages("pool")
library(pool)
pool <- dbPool(drv, dbname = dbname,
host = host, port = 5432,
user = login, password = pwd)
paste('Select * from', database)
paste('Select * from', 'batata')
runApp('Documents/Sanitation-Hub')
runApp('Documents/Sanitation-Hub')
runApp('Documents/Sanitation-Hub')
install.packages("shinyalert")
runApp('Documents/Sanitation-Hub')
library(shinyalert)
runApp('Documents/Sanitation-Hub')
runApp('Documents/Sanitation-Hub')
runApp('Documents/Sanitation-Hub')
shiny::runApp('Documents/Sanitation-Hub')
runApp('Documents/Sanitation-Hub')
pattern <- c('city', 'lat', 'lon', 'mob', 'users', 'fill', 'water', 'toilet', 'basin')
values <- c('a', 'b', c)
result <- check_colnames(values = values, pattern = pattern)
pattern <- c('city', 'lat', 'lon', 'mob', 'users', 'fill', 'water', 'toilet', 'basin')
values <- c('a', 'b', 'c')
result <- check_colnames(values = values, pattern = pattern)
check_colnames <- function(values, pattern) {
for (i in range(pattern)) {
result <- grepl(pattern = pattern[i], values[i])
print(result)
if(result == FALSE){
return(pattern[i])
}
}
return(TRUE)
}
pattern <- c('city', 'lat', 'lon', 'mob', 'users', 'fill', 'water', 'toilet', 'basin')
values <- c('a', 'b', 'c')
result <- check_colnames(values = values, pattern = pattern)
pattern[1]
values[1]
result <- grepl(pattern = pattern[1], values[1])
result <- grepl(pattern = pattern[1], values[1])
result == FALSE
range(pattern)
range(1:length(pattern))
range(1,length(pattern))
seq(1, length(pattern))
check_colnames <- function(values, pattern) {
for (i in seq(1:length(pattern))) {
result <- grepl(pattern = pattern[i], values[i])
print(result)
if(result == FALSE){
return(pattern[i])
}
}
return(TRUE)
}
pattern <- c('city', 'lat', 'lon', 'mob', 'users', 'fill', 'water', 'toilet', 'basin')
values <- c('a', 'b', 'c')
result <- check_colnames(values = values, pattern = pattern)
result
runApp('Documents/Sanitation-Hub')
shiny::runApp('Documents/Sanitation-Hub')
runApp('Documents/Sanitation-Hub')
shiny::runApp('Documents/Sanitation-Hub')
shiny::runApp('Documents/Sanitation-Hub')
shiny::runApp('Documents/CUA5 - Sanitation Analysis/Shiny')
df <- read.csv("Risk_Toilets_Final.csv")
setwd("/Users/gather3/Documents/CUA5 - Sanitation Analysis/Shiny")
df <- read.csv("Risk_Toilets_Final.csv")
View(df)
runApp()
deployApp(appTitle = "Sanitation_risk" , appName = "Sanitation Risk")
runApp()
runApp()
runApp()
rsconnect::deployApp(appTitle = "Sanitation_risk" , appName = "Sanitation_risk")
runApp()
rsconnect::deployApp(appTitle = "Sanitation_risk" , appName = "Sanitation_risk")
runApp()
rsconnect::deployApp(appTitle = "Sanitation_risk" , appName = "Sanitation_risk")
runApp()
rsconnect::deployApp(appTitle = "Sanitation_risk" , appName = "Sanitation_risk")
